name: "Release"

on:
  push:
    branches:
      - release

jobs:
  # First job: Create the release
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
      release_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Get version
        run: echo "PACKAGE_VERSION=$(node -pe "require('./src-tauri/tauri.conf.json').package.version")" >> $GITHUB_ENV
      - name: Create release
        id: create-release
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.PACKAGE_VERSION}`,
              name: `Release v${process.env.PACKAGE_VERSION}`,
              body: `## What's Changed
            
            ### Downloads
            - **Windows**: Download the \`.msi\` installer
            - **macOS**: Download the \`.dmg\` file (Intel) or \`.app.tar.gz\` (Apple Silicon)
            - **Linux**: Download the \`.AppImage\` or \`.deb\` package
            
            See the assets below to download and install this version.`,
              draft: false,
              prerelease: false
            });
            return data.id;

  # Second job: Build and upload assets
  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            rust-targets: "aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            rust-targets: "x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
            rust-targets: ""
          - platform: "windows-latest"
            args: ""
            rust-targets: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-targets }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm ci

      # Fix potential case sensitivity issues on Linux
      - name: Fix case sensitivity issues (Linux only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          # Check if the file exists with different casing
          find . -name "*weight*" -type f | head -10
          find . -name "*Weight*" -type f | head -10
          
          # Create a symlink or copy if needed (adjust path as necessary)
          if [ ! -f "app/routes/new-pipeline.dl._index/sections/training/Tabs/Losses/LossParamSections/CrossEntropyLoss/Weight.field" ]; then
            echo "Looking for Weight.field file..."
            find . -name "*Weight.field*" -type f | head -5
          fi

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: ${{ matrix.args }}