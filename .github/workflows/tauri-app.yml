name: "Release"

on:
  push:
    branches:
      - release
  # Optional: Also trigger on tags for version releases
  # push:
  #   tags:
  #     - 'v*'

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            rust-targets: "aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            rust-targets: "x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
            rust-targets: ""
          - platform: "windows-latest"
            args: ""
            rust-targets: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm # This will speed up builds

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-targets }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm ci # Use npm ci for faster, reliable installs in CI

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: 'v__VERSION__'
          releaseName: 'Release v__VERSION__'
          releaseBody: |
            ## What's Changed
            
            ### Downloads
            - **Windows**: Download the `.msi` installer
            - **macOS**: Download the `.dmg` file (Intel) or `.app.tar.gz` (Apple Silicon)
            - **Linux**: Download the `.AppImage` or `.deb` package
            
            See the assets below to download and install this version.
          releaseDraft: false # Set to true if you want to review before publishing
          prerelease: false
          args: ${{ matrix.args }}